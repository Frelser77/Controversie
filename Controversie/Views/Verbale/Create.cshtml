@model Controversie.Models.Verbale

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <div class="d-flex align-items-center justify-content-between">
        @Html.LabelFor(model => model.Fk_IdAnagrafica, "Anagrafica")
        @Html.DropDownListFor(model => model.Fk_IdAnagrafica, new SelectList(ViewBag.Anagrafiche, "Value", "Text"), "Seleziona Anagrafica", new { @class = "form-control" })

        @Html.ValidationMessageFor(model => model.Fk_IdAnagrafica)

        @Html.LabelFor(model => model.Fk_IdViolazione, "Tipo Violazione")
        @Html.DropDownListFor(model => model.Fk_IdViolazione, new SelectList(ViewBag.TipiViolazione, "Value", "Text"), "Seleziona Tipo Violazione", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Fk_IdViolazione, "", new { @class = "text-danger" })
    </div>
    <h4>Verbale</h4>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.DataViolazione, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DataViolazione, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DataViolazione, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IndirizzoViolazione, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.IndirizzoViolazione, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.IndirizzoViolazione, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.NominativoAgente, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NominativoAgente, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NominativoAgente, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DataTrascrizione, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DataTrascrizione, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DataTrascrizione, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Importo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Importo, new { htmlAttributes = new { @class = "form-control", @type = "number", step = "0.01" } })
            @Html.ValidationMessageFor(model => model.Importo, "", new { @class = "text-danger" })
        </div>
    </div>
 
    <div class="form-group">
        @Html.LabelFor(model => model.Pagata, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Pagata)
                @Html.ValidationMessageFor(model => model.Pagata, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index", null, new { @class = "nav-link" })
        </div>

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
